"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/scrape-and-parse";
exports.ids = ["pages/api/scrape-and-parse"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("puppeteer");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscrape-and-parse&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscrape-and-parse.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscrape-and-parse&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscrape-and-parse.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_scrape_and_parse_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/scrape-and-parse.ts */ \"(api)/./pages/api/scrape-and-parse.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_scrape_and_parse_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_scrape_and_parse_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_scrape_and_parse_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_scrape_and_parse_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/scrape-and-parse\",\n        pathname: \"/api/scrape-and-parse\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_scrape_and_parse_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNjcmFwZS1hbmQtcGFyc2UmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnNjcmFwZS1hbmQtcGFyc2UudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDNEQ7QUFDNUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDJEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywyREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96b3N0ZWwtdHJpcC1tdnAvPzM5NjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9zY3JhcGUtYW5kLXBhcnNlLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2NyYXBlLWFuZC1wYXJzZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NjcmFwZS1hbmQtcGFyc2VcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscrape-and-parse&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscrape-and-parse.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/scrape-and-parse.ts":
/*!***************************************!*\
  !*** ./pages/api/scrape-and-parse.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(puppeteer__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function handler(req, res) {\n    if (req.method !== \"POST\") return res.status(405).end();\n    const { variants } = req.body;\n    const browser = await puppeteer__WEBPACK_IMPORTED_MODULE_1___default().launch({\n        headless: true\n    });\n    const results = await Promise.all(variants.map(async ({ name, url })=>{\n        try {\n            const page = await browser.newPage();\n            await page.goto(url, {\n                waitUntil: \"networkidle2\",\n                timeout: 60000\n            });\n            // Extract visible text\n            const visibleText = await page.evaluate(()=>document.body.innerText.replace(/\\s+/g, \" \").trim());\n            // ✅ Extract image URLs with safe type cast\n            const imageUrls = await page.evaluate(()=>{\n                const imgs = Array.from(document.querySelectorAll(\"img\"));\n                return imgs.map((img)=>img.getAttribute(\"src\") || img.getAttribute(\"data-src\")).filter((src)=>typeof src === \"string\" && src.startsWith(\"https://\") && !src.includes(\"svg\") && !src.includes(\"icons\") && !src.includes(\"logo\")).slice(0, 5);\n            });\n            await page.close();\n            // GPT prompt\n            const prompt = `\nYou are a travel content parser. Convert this raw trip content into structured JSON.\n\n✦ Use the schema below.\n✦ Each bullet point (highlights, inclusions, exclusions) must be under 100 characters.\n✦ Use clean, crisp language. Avoid fluff or repetition.\n✦ Return only valid JSON — no markdown, no comments.\n\nSchema:\n{\n  \"tierName\": \"${name}\",\n  \"tripHighlights\": [ \"string (≤100 chars)\", ... ],\n  \"whatYouDo\": \"1-paragraph summary\",\n  \"dayPlan\": [\n    {\n      \"day\": number,\n      \"date\": \"string\",\n      \"title\": \"string\",\n      \"description\": \"string\"\n    }\n  ],\n  \"inclusions\": [ \"string (≤100 chars)\", ... ],\n  \"exclusions\": [ \"string (≤100 chars)\", ... ],\n  \"pickup\": \"string\",\n  \"drop\": \"string\",\n  \"price\": \"string\",\n  \"duration\": \"string\",\n  \"nextGroupDates\": [ \"string\", ... ],\n  \"images\": [ \"imageURL1\", \"imageURL2\", ... ]\n}\n\nTrip images:\n${imageUrls.join(\", \")}\n\nTrip content:\n\"\"\" ${visibleText.slice(0, 6000)} \"\"\"\n`;\n            const response = await openai.chat.completions.create({\n                model: \"gpt-4o\",\n                messages: [\n                    {\n                        role: \"user\",\n                        content: prompt\n                    }\n                ],\n                temperature: 0.4\n            });\n            const raw = response.choices[0].message.content || \"\";\n            const cleanJson = raw.trim().replace(/^```json|```$/g, \"\").trim();\n            const parsed = JSON.parse(cleanJson || \"{}\");\n            return {\n                name,\n                url,\n                parsed\n            };\n        } catch (err) {\n            return {\n                name,\n                url,\n                error: err.message || \"Scrape/Parse failed\"\n            };\n        }\n    }));\n    await browser.close();\n    res.status(200).json(results);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc2NyYXBlLWFuZC1wYXJzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ2dDO0FBQ0U7QUFFbEMsTUFBTUUsU0FBUyxJQUFJRiwwQ0FBTUEsQ0FBQztJQUN4QkcsUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ3BDO0FBRWUsZUFBZUMsUUFBUUMsR0FBbUIsRUFBRUMsR0FBb0I7SUFDN0UsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVEsT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLEdBQUc7SUFFckQsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0wsSUFBSU0sSUFBSTtJQUU3QixNQUFNQyxVQUFVLE1BQU1kLHVEQUFnQixDQUFDO1FBQUVnQixVQUFVO0lBQUs7SUFFeEQsTUFBTUMsVUFBVSxNQUFNQyxRQUFRQyxHQUFHLENBQy9CUCxTQUFTUSxHQUFHLENBQUMsT0FBTyxFQUFFQyxJQUFJLEVBQUVDLEdBQUcsRUFBaUM7UUFDOUQsSUFBSTtZQUNGLE1BQU1DLE9BQU8sTUFBTVQsUUFBUVUsT0FBTztZQUNsQyxNQUFNRCxLQUFLRSxJQUFJLENBQUNILEtBQUs7Z0JBQUVJLFdBQVc7Z0JBQWdCQyxTQUFTO1lBQU07WUFFakUsdUJBQXVCO1lBQ3ZCLE1BQU1DLGNBQWMsTUFBTUwsS0FBS00sUUFBUSxDQUFDLElBQ3RDQyxTQUFTakIsSUFBSSxDQUFDa0IsU0FBUyxDQUFDQyxPQUFPLENBQUMsUUFBUSxLQUFLQyxJQUFJO1lBR25ELDJDQUEyQztZQUMzQyxNQUFNQyxZQUFhLE1BQU1YLEtBQUtNLFFBQVEsQ0FBQztnQkFDckMsTUFBTU0sT0FBT0MsTUFBTUMsSUFBSSxDQUFDUCxTQUFTUSxnQkFBZ0IsQ0FBQztnQkFDbEQsT0FBT0gsS0FDSmYsR0FBRyxDQUFDLENBQUNtQixNQUFRQSxJQUFJQyxZQUFZLENBQUMsVUFBVUQsSUFBSUMsWUFBWSxDQUFDLGFBQ3pEQyxNQUFNLENBQUMsQ0FBQ0MsTUFDUCxPQUFPQSxRQUFRLFlBQ2ZBLElBQUlDLFVBQVUsQ0FBQyxlQUNmLENBQUNELElBQUlFLFFBQVEsQ0FBQyxVQUNkLENBQUNGLElBQUlFLFFBQVEsQ0FBQyxZQUNkLENBQUNGLElBQUlFLFFBQVEsQ0FBQyxTQUVmQyxLQUFLLENBQUMsR0FBRztZQUNkO1lBRUEsTUFBTXRCLEtBQUt1QixLQUFLO1lBRWhCLGFBQWE7WUFDYixNQUFNQyxTQUFTLENBQUM7Ozs7Ozs7Ozs7ZUFVVCxFQUFFMUIsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCdEIsRUFBRWEsVUFBVWMsSUFBSSxDQUFDLE1BQU07OztJQUduQixFQUFFcEIsWUFBWWlCLEtBQUssQ0FBQyxHQUFHLE1BQU07QUFDakMsQ0FBQztZQUVPLE1BQU1JLFdBQVcsTUFBTWhELE9BQU9pRCxJQUFJLENBQUNDLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDO2dCQUNwREMsT0FBTztnQkFDUEMsVUFBVTtvQkFBQzt3QkFBRUMsTUFBTTt3QkFBUUMsU0FBU1Q7b0JBQU87aUJBQUU7Z0JBQzdDVSxhQUFhO1lBQ2Y7WUFFQSxNQUFNQyxNQUFNVCxTQUFTVSxPQUFPLENBQUMsRUFBRSxDQUFDQyxPQUFPLENBQUNKLE9BQU8sSUFBSTtZQUNuRCxNQUFNSyxZQUFZSCxJQUFJekIsSUFBSSxHQUFHRCxPQUFPLENBQUMsa0JBQWtCLElBQUlDLElBQUk7WUFDL0QsTUFBTTZCLFNBQVNDLEtBQUtDLEtBQUssQ0FBQ0gsYUFBYTtZQUV2QyxPQUFPO2dCQUFFeEM7Z0JBQU1DO2dCQUFLd0M7WUFBTztRQUM3QixFQUFFLE9BQU9HLEtBQVU7WUFDakIsT0FBTztnQkFBRTVDO2dCQUFNQztnQkFBSzRDLE9BQU9ELElBQUlMLE9BQU8sSUFBSTtZQUFzQjtRQUNsRTtJQUNGO0lBR0YsTUFBTTlDLFFBQVFnQyxLQUFLO0lBQ25CdEMsSUFBSUUsTUFBTSxDQUFDLEtBQUt5RCxJQUFJLENBQUNsRDtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3pvc3RlbC10cmlwLW12cC8uL3BhZ2VzL2FwaS9zY3JhcGUtYW5kLXBhcnNlLnRzP2I5OWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gXCJuZXh0XCI7XG5pbXBvcnQgeyBPcGVuQUkgfSBmcm9tIFwib3BlbmFpXCI7XG5pbXBvcnQgcHVwcGV0ZWVyIGZyb20gXCJwdXBwZXRlZXJcIjtcblxuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSh7XG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gXCJQT1NUXCIpIHJldHVybiByZXMuc3RhdHVzKDQwNSkuZW5kKCk7XG5cbiAgY29uc3QgeyB2YXJpYW50cyB9ID0gcmVxLmJvZHk7XG5cbiAgY29uc3QgYnJvd3NlciA9IGF3YWl0IHB1cHBldGVlci5sYXVuY2goeyBoZWFkbGVzczogdHJ1ZSB9KTtcblxuICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgdmFyaWFudHMubWFwKGFzeW5jICh7IG5hbWUsIHVybCB9OiB7IG5hbWU6IHN0cmluZzsgdXJsOiBzdHJpbmcgfSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcGFnZSA9IGF3YWl0IGJyb3dzZXIubmV3UGFnZSgpO1xuICAgICAgICBhd2FpdCBwYWdlLmdvdG8odXJsLCB7IHdhaXRVbnRpbDogXCJuZXR3b3JraWRsZTJcIiwgdGltZW91dDogNjAwMDAgfSk7XG5cbiAgICAgICAgLy8gRXh0cmFjdCB2aXNpYmxlIHRleHRcbiAgICAgICAgY29uc3QgdmlzaWJsZVRleHQgPSBhd2FpdCBwYWdlLmV2YWx1YXRlKCgpID0+XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5pbm5lclRleHQucmVwbGFjZSgvXFxzKy9nLCBcIiBcIikudHJpbSgpXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8g4pyFIEV4dHJhY3QgaW1hZ2UgVVJMcyB3aXRoIHNhZmUgdHlwZSBjYXN0XG4gICAgICAgIGNvbnN0IGltYWdlVXJscyA9IChhd2FpdCBwYWdlLmV2YWx1YXRlKCgpID0+IHtcbiAgICAgICAgICBjb25zdCBpbWdzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW1nXCIpKTtcbiAgICAgICAgICByZXR1cm4gaW1nc1xuICAgICAgICAgICAgLm1hcCgoaW1nKSA9PiBpbWcuZ2V0QXR0cmlidXRlKFwic3JjXCIpIHx8IGltZy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKSlcbiAgICAgICAgICAgIC5maWx0ZXIoKHNyYyk6IHNyYyBpcyBzdHJpbmcgPT5cbiAgICAgICAgICAgICAgdHlwZW9mIHNyYyA9PT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICAgICAgICBzcmMuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpICYmXG4gICAgICAgICAgICAgICFzcmMuaW5jbHVkZXMoXCJzdmdcIikgJiZcbiAgICAgICAgICAgICAgIXNyYy5pbmNsdWRlcyhcImljb25zXCIpICYmXG4gICAgICAgICAgICAgICFzcmMuaW5jbHVkZXMoXCJsb2dvXCIpXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAuc2xpY2UoMCwgNSk7XG4gICAgICAgIH0pKSBhcyBzdHJpbmdbXTtcblxuICAgICAgICBhd2FpdCBwYWdlLmNsb3NlKCk7XG5cbiAgICAgICAgLy8gR1BUIHByb21wdFxuICAgICAgICBjb25zdCBwcm9tcHQgPSBgXG5Zb3UgYXJlIGEgdHJhdmVsIGNvbnRlbnQgcGFyc2VyLiBDb252ZXJ0IHRoaXMgcmF3IHRyaXAgY29udGVudCBpbnRvIHN0cnVjdHVyZWQgSlNPTi5cblxu4pymIFVzZSB0aGUgc2NoZW1hIGJlbG93Llxu4pymIEVhY2ggYnVsbGV0IHBvaW50IChoaWdobGlnaHRzLCBpbmNsdXNpb25zLCBleGNsdXNpb25zKSBtdXN0IGJlIHVuZGVyIDEwMCBjaGFyYWN0ZXJzLlxu4pymIFVzZSBjbGVhbiwgY3Jpc3AgbGFuZ3VhZ2UuIEF2b2lkIGZsdWZmIG9yIHJlcGV0aXRpb24uXG7inKYgUmV0dXJuIG9ubHkgdmFsaWQgSlNPTiDigJQgbm8gbWFya2Rvd24sIG5vIGNvbW1lbnRzLlxuXG5TY2hlbWE6XG57XG4gIFwidGllck5hbWVcIjogXCIke25hbWV9XCIsXG4gIFwidHJpcEhpZ2hsaWdodHNcIjogWyBcInN0cmluZyAo4omkMTAwIGNoYXJzKVwiLCAuLi4gXSxcbiAgXCJ3aGF0WW91RG9cIjogXCIxLXBhcmFncmFwaCBzdW1tYXJ5XCIsXG4gIFwiZGF5UGxhblwiOiBbXG4gICAge1xuICAgICAgXCJkYXlcIjogbnVtYmVyLFxuICAgICAgXCJkYXRlXCI6IFwic3RyaW5nXCIsXG4gICAgICBcInRpdGxlXCI6IFwic3RyaW5nXCIsXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwic3RyaW5nXCJcbiAgICB9XG4gIF0sXG4gIFwiaW5jbHVzaW9uc1wiOiBbIFwic3RyaW5nICjiiaQxMDAgY2hhcnMpXCIsIC4uLiBdLFxuICBcImV4Y2x1c2lvbnNcIjogWyBcInN0cmluZyAo4omkMTAwIGNoYXJzKVwiLCAuLi4gXSxcbiAgXCJwaWNrdXBcIjogXCJzdHJpbmdcIixcbiAgXCJkcm9wXCI6IFwic3RyaW5nXCIsXG4gIFwicHJpY2VcIjogXCJzdHJpbmdcIixcbiAgXCJkdXJhdGlvblwiOiBcInN0cmluZ1wiLFxuICBcIm5leHRHcm91cERhdGVzXCI6IFsgXCJzdHJpbmdcIiwgLi4uIF0sXG4gIFwiaW1hZ2VzXCI6IFsgXCJpbWFnZVVSTDFcIiwgXCJpbWFnZVVSTDJcIiwgLi4uIF1cbn1cblxuVHJpcCBpbWFnZXM6XG4ke2ltYWdlVXJscy5qb2luKFwiLCBcIil9XG5cblRyaXAgY29udGVudDpcblwiXCJcIiAke3Zpc2libGVUZXh0LnNsaWNlKDAsIDYwMDApfSBcIlwiXCJcbmA7XG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBvcGVuYWkuY2hhdC5jb21wbGV0aW9ucy5jcmVhdGUoe1xuICAgICAgICAgIG1vZGVsOiBcImdwdC00b1wiLFxuICAgICAgICAgIG1lc3NhZ2VzOiBbeyByb2xlOiBcInVzZXJcIiwgY29udGVudDogcHJvbXB0IH1dLFxuICAgICAgICAgIHRlbXBlcmF0dXJlOiAwLjQsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnN0IHJhdyA9IHJlc3BvbnNlLmNob2ljZXNbMF0ubWVzc2FnZS5jb250ZW50IHx8IFwiXCI7XG4gICAgICAgIGNvbnN0IGNsZWFuSnNvbiA9IHJhdy50cmltKCkucmVwbGFjZSgvXmBgYGpzb258YGBgJC9nLCBcIlwiKS50cmltKCk7XG4gICAgICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoY2xlYW5Kc29uIHx8IFwie31cIik7XG5cbiAgICAgICAgcmV0dXJuIHsgbmFtZSwgdXJsLCBwYXJzZWQgfTtcbiAgICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAgIHJldHVybiB7IG5hbWUsIHVybCwgZXJyb3I6IGVyci5tZXNzYWdlIHx8IFwiU2NyYXBlL1BhcnNlIGZhaWxlZFwiIH07XG4gICAgICB9XG4gICAgfSlcbiAgKTtcblxuICBhd2FpdCBicm93c2VyLmNsb3NlKCk7XG4gIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdHMpO1xufVxuIl0sIm5hbWVzIjpbIk9wZW5BSSIsInB1cHBldGVlciIsIm9wZW5haSIsImFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJlbmQiLCJ2YXJpYW50cyIsImJvZHkiLCJicm93c2VyIiwibGF1bmNoIiwiaGVhZGxlc3MiLCJyZXN1bHRzIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsIm5hbWUiLCJ1cmwiLCJwYWdlIiwibmV3UGFnZSIsImdvdG8iLCJ3YWl0VW50aWwiLCJ0aW1lb3V0IiwidmlzaWJsZVRleHQiLCJldmFsdWF0ZSIsImRvY3VtZW50IiwiaW5uZXJUZXh0IiwicmVwbGFjZSIsInRyaW0iLCJpbWFnZVVybHMiLCJpbWdzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImltZyIsImdldEF0dHJpYnV0ZSIsImZpbHRlciIsInNyYyIsInN0YXJ0c1dpdGgiLCJpbmNsdWRlcyIsInNsaWNlIiwiY2xvc2UiLCJwcm9tcHQiLCJqb2luIiwicmVzcG9uc2UiLCJjaGF0IiwiY29tcGxldGlvbnMiLCJjcmVhdGUiLCJtb2RlbCIsIm1lc3NhZ2VzIiwicm9sZSIsImNvbnRlbnQiLCJ0ZW1wZXJhdHVyZSIsInJhdyIsImNob2ljZXMiLCJtZXNzYWdlIiwiY2xlYW5Kc29uIiwicGFyc2VkIiwiSlNPTiIsInBhcnNlIiwiZXJyIiwiZXJyb3IiLCJqc29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/scrape-and-parse.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscrape-and-parse&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscrape-and-parse.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();